{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.js","services/pixabay-api.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/Modal/Modal.js","components/ImageGallery/ImageGallery.js","App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","searchQuery","handlerSearchQuery","event","setState","currentTarget","value","handlerSubmit","preventDefault","trim","alert","props","onSubmit","this","className","s","header","form","type","button","label","input","autoComplete","autoFocus","placeholder","onChange","Component","fetchImages","url","_searchQuery","_page","_totalImages","_api","a","fetch","response","json","data","totalImages","total","hits","console","log","ImageGalleryItem","images","map","id","webformatURL","largeImageURL","item","href","onClick","onOpenModal","src","alt","image","Button","Modal","onCloseModal","e","code","target","window","addEventListener","removeEventListener","createPortal","overlay","modal","children","document","getElementById","API","pixabayAPI","Status","ImageGallery","useState","status","setStatus","setImages","isModalOpen","setIsModalOpen","modalImage","setModalImage","totalRemainingImages","setTotalRemainingImages","error","setError","useEffect","getDate","resetPage","querySearch","length","center","color","height","width","gallery","page","then","nextImages","scrollTo","top","scrollHeight","behavior","message","App","setSearchQuery","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bd99ef5c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ImageGalleryItem_item__2ey0n\",\"image\":\"ImageGalleryItem_image__2xsbt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__2GjdW\",\"modal\":\"Modal_modal__P3_V5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gallery\":\"ImageGallery_gallery__gboaM\",\"center\":\"ImageGallery_center__1xxlp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3QF_k\"};","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Searchbar.module.css\";\n\nclass Searchbar extends Component {\n  state = {\n    searchQuery: \"\",\n  };\n\n  handlerSearchQuery = (event) => {\n    this.setState({\n      searchQuery: event.currentTarget.value,\n    });\n  };\n\n  handlerSubmit = (event) => {\n    event.preventDefault();\n\n    if (this.state.searchQuery.trim() === \"\") {\n      return alert(\"Enter query search\");\n    }\n\n    this.props.onSubmit(this.state.searchQuery);\n    this.setState({ searchQuery: \"\" });\n  };\n\n  render() {\n    const { searchQuery } = this.state;\n\n    return (\n      <header className={s.header}>\n        <form className={s.form} onSubmit={this.handlerSubmit}>\n          <button type=\"submit\" className={s.button}>\n            <span className={s.label}>Search</span>\n          </button>\n\n          <input\n            className={s.input}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={searchQuery}\n            onChange={this.handlerSearchQuery}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","class fetchImages {\n  constructor(url = \"https://pixabay.com/api/\") {\n    this.url = url;\n    this._searchQuery = \"\";\n    this._page = 1;\n    this._totalImages = 0;\n    this._api = \"1030453-4271fa747ef92e686e2b519ac\";\n  }\n\n  get searchQuery() {\n    return this._searchQuery;\n  }\n\n  set searchQuery(value) {\n    return (this._searchQuery = value);\n  }\n\n  get page() {\n    return this._page;\n  }\n\n  set page(value) {\n    return (this._page += value);\n  }\n\n  resetPage() {\n    return (this._page = 1);\n  }\n\n  get totalImages() {\n    return this._totalImages;\n  }\n\n  set totalImages(value) {\n    return (this._totalImages = value);\n  }\n\n  async querySearch() {\n    try {\n      const response = await fetch(\n        `${this.url}?q=${this._searchQuery}&page=${this._page}&key=${this._api}&orientation=horizontal&per_page=12`\n      );\n      const data = await response.json();\n\n      this.totalImages = data.total;\n      return data.hits;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nexport default fetchImages;\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ImageGalleryItem.module.css\";\n\nclass ImageGalleryItem extends Component {\n  render() {\n    return this.props.images.map(({ id, webformatURL, largeImageURL }) => {\n      return (\n        <li key={id} id={id} className={s.item}>\n          <a href={largeImageURL} onClick={this.props.onOpenModal}>\n            <img\n              src={webformatURL}\n              data-modal={largeImageURL}\n              alt=\"\"\n              className={s.image}\n            />\n          </a>\n        </li>\n      );\n    });\n  }\n}\n\nImageGalleryItem.propTypes = {\n  onOpenModal: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from \"prop-types\";\nimport s from \"./Button.module.css\";\n\nfunction Button({ onClick }) {\n  return (\n    <button className={s.button} onClick={onClick}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Modal.module.css\";\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.onCloseModal);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.onCloseModal);\n  }\n\n  onCloseModal = (e) => {\n    if (e.code === \"Escape\" || e.currentTarget === e.target) {\n      this.props.onOpenModal(e);\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className={s.overlay} onClick={this.onCloseModal}>\n        <div className={s.modal}>{this.props.children}</div>\n      </div>,\n      document.getElementById(\"modal-root\")\n    );\n  }\n}\n\nModal.propTypes = {\n  onOpenModal: PropTypes.func.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Modal;\n","import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Loader from \"react-loader-spinner\";\nimport pixabayAPI from \"../../services/pixabay-api\";\nimport ImageGalleryItem from \"components/ImageGalleryItem\";\nimport ButtonLoadMore from \"components/Button\";\nimport Modal from \"components/Modal\";\nimport s from \"./ImageGallery.module.css\";\n\nconst API = new pixabayAPI();\nconst Status = {\n  IDLE: \"idle\",\n  PENDING: \"pending\",\n  RESOLVED: \"resolved\",\n  REJECTED: \"rejected\",\n  EMPTY: \"empty\",\n};\n\nfunction ImageGallery({ searchQuery }) {\n  const [status, setStatus] = useState(Status.IDLE);\n  const [images, setImages] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalImage, setModalImage] = useState(null);\n  const [totalRemainingImages, setTotalRemainingImages] = useState(0);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (searchQuery === \"\") {\n      return;\n    }\n\n    const getDate = async () => {\n      setStatus(Status.PENDING);\n\n      try {\n        API.searchQuery = searchQuery;\n        API.resetPage();\n\n        const images = await API.querySearch();\n\n        setImages(images);\n        setStatus(() => (images.length > 0 ? Status.RESOLVED : Status.EMPTY));\n        setTotalRemainingImages(() =>\n          API.totalImages > 12 ? API.totalImages - 12 : 0\n        );\n      } catch (error) {\n        setError(error);\n        setStatus(Status.REJECTED);\n      }\n    };\n\n    getDate();\n  }, [searchQuery]);\n\n  const onLoadMore = () => {\n    API.page = 1;\n\n    API.querySearch().then((nextImages) => {\n      setImages((state) => [...state, ...nextImages]);\n      setTotalRemainingImages((state) => state - 12);\n\n      window.scrollTo({\n        top: document.getElementById(\"gallery-images\").scrollHeight,\n        behavior: \"smooth\",\n      });\n    });\n  };\n\n  const onOpenModal = (event) => {\n    event.preventDefault();\n    const modalImage = event.currentTarget.href;\n\n    setIsModalOpen((state) => !state);\n    setModalImage(modalImage);\n  };\n\n  if (status === Status.IDLE) {\n    return <></>;\n  }\n\n  if (status === Status.EMPTY) {\n    return (\n      <p>\n        Sorry, but nothing matched your search terms. Please try again with some\n        different keywords.\n      </p>\n    );\n  }\n\n  if (status === Status.PENDING) {\n    return (\n      <>\n        <Loader\n          className={s.center}\n          type=\"ThreeDots\"\n          color=\"#3f51b5\"\n          height={100}\n          width={100}\n        />\n      </>\n    );\n  }\n\n  if (status === Status.RESOLVED) {\n    return (\n      <>\n        <ul className={s.gallery} id=\"gallery-images\">\n          <ImageGalleryItem images={images} onOpenModal={onOpenModal} />\n        </ul>\n\n        {totalRemainingImages > 0 && <ButtonLoadMore onClick={onLoadMore} />}\n\n        {isModalOpen && (\n          <Modal onOpenModal={onOpenModal}>\n            <img src={modalImage} alt=\"\" />\n          </Modal>\n        )}\n      </>\n    );\n  }\n\n  if (status === Status.REJECTED) {\n    return <p>{error.message}</p>;\n  }\n}\n\n// class OldImageGallery extends Component {\n//   state = {\n//     images: [],\n//     status: Status.IDLE,\n//     error: null,\n//     isModalOpen: false,\n//     modalImage: null,\n//     totalRemainingImages: 0,\n//   };\n\n//   async componentDidUpdate(prevProps) {\n//     const prevSearchTerms = prevProps.searchQuery;\n//     const nextSearchTerms = this.props.searchQuery;\n\n//     if (prevSearchTerms !== nextSearchTerms) {\n//       this.setState({ status: Status.PENDING });\n\n//       try {\n//         API.searchQuery = nextSearchTerms;\n//         API.resetPage();\n\n//         const images = await API.querySearch();\n\n//         this.setState({\n//           images,\n//           status: images.length > 0 ? Status.RESOLVED : Status.EMPTY,\n//           totalRemainingImages: API.totalImages > 12 ? API.totalImages - 12 : 0,\n//         });\n//       } catch (error) {\n//         this.setState({\n//           error,\n//           status: Status.REJECTED,\n//         });\n//       }\n//     }\n//   }\n\n//   onLoadMore = () => {\n//     API.page = 1;\n\n//     API.querySearch().then((nextImages) => {\n//       this.setState((prevState) => ({\n//         images: [...prevState.images, ...nextImages],\n//         totalRemainingImages: prevState.totalRemainingImages - 12,\n//       }));\n\n//       window.scrollTo({\n//         top: document.getElementById(\"gallery-images\").scrollHeight,\n//         behavior: \"smooth\",\n//       });\n//     });\n//   };\n\n//   onOpenModal = (event) => {\n//     event.preventDefault();\n//     const modalImage = event.currentTarget.href;\n\n//     this.setState((prevState) => {\n//       return { isModalOpen: !prevState.isModalOpen, modalImage };\n//     });\n//   };\n\n//   render() {\n//     const { images, status, error, isModalOpen, modalImage } = this.state;\n\n//     if (status === \"idle\") {\n//       return <></>;\n//     }\n\n//     if (status === \"empty\") {\n//       return (\n//         <p>\n//           Sorry, but nothing matched your search terms. Please try again with\n//           some different keywords.\n//         </p>\n//       );\n//     }\n\n//     if (status === \"pending\") {\n//       return (\n//         <>\n//           <Loader\n//             className={s.center}\n//             type=\"ThreeDots\"\n//             color=\"#3f51b5\"\n//             height={100}\n//             width={100}\n//           />\n//         </>\n//       );\n//     }\n\n//     if (status === \"resolved\") {\n//       return (\n//         <>\n//           <ul className={s.gallery} id=\"gallery-images\">\n//             <ImageGalleryItem images={images} onOpenModal={this.onOpenModal} />\n//           </ul>\n\n//           {this.state.totalRemainingImages > 0 && (\n//             <ButtonLoadMore onClick={this.onLoadMore} />\n//           )}\n\n//           {isModalOpen && (\n//             <Modal onOpenModal={this.onOpenModal}>\n//               <img src={modalImage} alt=\"\" />\n//             </Modal>\n//           )}\n//         </>\n//       );\n//     }\n\n//     if (status === \"rejected\") {\n//       return <p>{error.message}</p>;\n//     }\n//   }\n// }\n\nImageGallery.propTypes = {\n  searchQuery: PropTypes.string,\n};\n\nexport default ImageGallery;\n","import { useState } from \"react\";\nimport Searchbar from \"./components/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery\";\n\nfunction App() {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={setSearchQuery} />\n\n      <ImageGallery searchQuery={searchQuery} />\n    </div>\n  );\n}\n\n// class OldApp extends Component {\n//   state = {\n//     searchQuery: \"\",\n//   };\n\n//   handlerSearchQuery = (searchQuery) => {\n//     this.setState({ searchQuery });\n//   };\n\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <Searchbar onSubmit={this.handlerSearchQuery} />\n\n//         <ImageGallery searchQuery={this.state.searchQuery} />\n//       </div>\n//     );\n//   }\n// }\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Searchbar_header__34uEY\",\"form\":\"Searchbar_form__XuKjc\",\"button\":\"Searchbar_button__MhnaU\",\"label\":\"Searchbar_label__1BV3w\",\"input\":\"Searchbar_input__2C4aO\"};"],"sourceRoot":""}